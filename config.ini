# Hidden Networks Scanner Configuration
# Advanced configuration options for the scanner

[scanning]
# Default timeout for scans in seconds
default_timeout = 30

# Default interface (leave empty for auto-detection)
default_interface = 

# Enable passive monitoring by default
passive_scan = false

# Auto-detect OS and tools at startup (Python side)
auto_detect_os = true

# Maximum number of networks to display
max_display_networks = 100

[output]
# Default output format (json, text, csv)
default_format = text

# Include timestamp in output files
include_timestamp = true

# Default output directory
output_directory = ./results

[detection]
# Minimum signal strength to consider (dBm)
min_signal_strength = -100

# Hidden network detection patterns
hidden_patterns = ["<hidden>", '""', "", "\\x00"]

# Channels to focus on (empty for all)
preferred_channels = []

[security]
# Security protocols to highlight
security_priorities = ["WPA3", "WPA2", "WPA", "WEP", "Open"]

# Warn about weak security
warn_weak_security = true

[advanced]
# Enable debug mode
debug = false

# Number of scan iterations for better accuracy
scan_iterations = 1

# Delay between scan iterations (seconds)
iteration_delay = 5

# Enable experimental features
experimental = false

[monitor_mode]
# Preferred method on Linux: airmon-ng or iw
linux_method = auto  ; options: auto, airmon-ng, iw

# Windows monitor mode: requires Npcap with WlanHelper
windows_enable = hint  ; options: hint, disabled (tool provides guidance only)

[dependencies]
# Attempt to auto-install dependencies on Linux/macOS when root
auto_install = true
